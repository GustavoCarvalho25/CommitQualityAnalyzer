{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "Worker": {
    "IntervaloMinutos": 30
  },
  "Analise": {
    "QuantidadeDias": 1,
    "MaximoCommits": 5,
    "MaximoArquivosPorCommit": 5
  },
  "Git": {
    "RepositoryPath": "C:\\ESTUDO\\DOTNET\\TCC\\RefactorScore\\sample-java-crud",
    "DefaultBranch": "master",
    "UserName": "RefactorScore",
    "UserEmail": "refactorscore@example.com"
  },
  "Ollama": {
    "BaseUrl": "http://localhost:11434",
    "ModeloPadrao": "mistral:latest",
    "ModeloAnalise": "mistral:latest",
    "ModeloRecomendacoes": "mistral:latest",
    "TimeoutSegundos": 600
  },
  "MongoDB": {
    "ConnectionString": "mongodb://admin:admin123@localhost:27017/?authSource=admin",
    "DatabaseName": "RefactorScore",
    "AnaliseCommitCollectionName": "AnaliseDeCommits",
    "AnaliseArquivoCollectionName": "AnaliseDeArquivos",
    "RecomendacoesCollectionName": "Recomendacoes"
  },
  "PromptTemplates": {
    "AnaliseCodigo": "Você é um especialista em análise de código e boas práticas de programação. Analise o código abaixo e avalie-o segundo os princípios de código limpo e boas práticas.\n\nLinguagem: {{LINGUAGEM}}\n\nContexto adicional: {{CONTEXTO}}\n\nCódigo a ser analisado:\n```\n{{CODIGO}}\n```\n\nAvalie cada um dos seguintes critérios de 0 a 10 (onde 0 é péssimo e 10 é excelente):\n1. Nomenclatura de variáveis, funções e classes\n2. Tamanho e responsabilidade única de funções\n3. Uso adequado de comentários e documentação\n4. Coesão de métodos e classes\n5. Ausência de código morto ou redundante\n\nPara cada critério, forneça uma breve justificativa.\n\nResponda apenas em formato JSON, como no exemplo abaixo(Não deve ser copiado, pense até gerar um exemplo coerente com o código analisado, não importa quantas vezes você precise reprocessar):\n{\n  \"nomenclaturaVariaveis\": 7,\n  \"tamanhoFuncoes\": 8,\n  \"usoComentariosRelevantes\": 6,\n  \"coesaoMetodos\": 9,\n  \"evitacaoCodigoMorto\": 5,\n  \"justificativas\": {\n    \"nomenclaturaVariaveis\": \"Nomes descritivos e claros, mas algumas variáveis poderiam ter nomes mais expressivos\",\n    \"tamanhoFuncoes\": \"Funções curtas e com responsabilidade única\",\n    \"usoComentariosRelevantes\": \"Poucos comentários explicando o propósito do código\",\n    \"coesaoMetodos\": \"Métodos bem coesos, cada um realiza uma única tarefa\",\n    \"evitacaoCodigoMorto\": \"Há código comentado que poderia ser removido\"\n  }\n}",
    "Recomendacoes": "Você é um tutor de programação experiente. Com base na análise de código abaixo, gere recomendações educativas para ajudar o desenvolvedor a melhorar seu código e aprender melhores práticas.\n\nLinguagem: {{LINGUAGEM}}\n\nAnálise do código:\n{{ANALISE}}\n\nCódigo analisado:\n```\n{{CODIGO}}\n```\n\nForneça 3-5 recomendações específicas, priorizando os aspectos que mais precisam de melhoria conforme indicado na análise. Cada recomendação deve:\n1. Focar em um problema ou oportunidade de melhoria específica\n2. Explicar o impacto positivo da mudança\n3. Incluir um exemplo concreto de como implementar a melhoria\n4. Fornecer links ou recursos para aprendizado adicional\n\nResponda apenas em formato JSON, como array de objetos, conforme exemplo abaixo(Não deve ser copiado, pense até gerar um exemplo coerente com o código analisado, não importa quantas vezes você precise reprocessar):\n[\n  {\n    \"titulo\": \"Melhore a nomenclatura de variáveis\",\n    \"descricao\": \"Variáveis como 'x' e 'temp' não comunicam seu propósito. Nomes descritivos melhoram a legibilidade e manutenção do código.\",\n    \"exemplo\": \"Em vez de 'int x = calcularTotal();', use 'int totalProdutos = calcularTotalProdutos();'\",\n    \"prioridade\": \"Alta\",\n    \"tipo\": \"Nomenclatura\",\n    \"dificuldade\": \"Fácil\",\n    \"referenciaArquivo\": \"linha 25-30\",\n    \"recursosEstudo\": [\"https://cleancoders.com/resources/naming-variables\", \"https://refactoring.guru/renaming\"]\n  }\n]"
  },
  "Cache": {
    "ExpiracaoAnaliseMinutos": 60,
    "ExpiracaoRecomendacoesMinutos": 120
  }
}
