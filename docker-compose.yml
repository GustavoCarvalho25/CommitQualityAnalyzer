version: '3.8'

services:
  # Serviço para a execução do modelo de linguagem local (Ollama)
  ollama:
    image: ollama/ollama:latest
    container_name: refactorscore-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ./ModelFiles:/ModelFiles
    environment:
      - OLLAMA_MODELS=/root/.ollama/models
      - OLLAMA_KEEP_ALIVE=5m
    deploy:
      resources:
        limits:
          memory: 10G
        reservations:
          memory: 8G
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped

  # Serviço para inicializar o modelo do Ollama
  ollama-init:
    image: curlimages/curl:latest
    depends_on:
      - ollama
    command: >
      sh -c "
        echo 'Aguardando Ollama iniciar...' &&
        sleep 20 &&
        echo 'Verificando status do Ollama...' &&
        curl -s http://ollama:11434/api/tags &&
        echo 'Baixando modelo mistral...' &&
        curl -X POST http://ollama:11434/api/pull -d '{\"name\":\"mistral:7b-instruct-v0.2-q4_0\"}' &&
        echo 'Modelo baixado com sucesso!'
      "
    restart: "no"

  # Serviço para o banco de dados MongoDB
  mongodb:
    image: mongo:latest
    container_name: refactorscore-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    restart: unless-stopped

  # Interface web para gerenciamento do MongoDB
  mongo-express:
    image: mongo-express:latest
    container_name: refactorscore-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin123
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    restart: unless-stopped

  # Serviço Redis para armazenamento temporário
  redis:
    image: redis:latest
    container_name: refactorscore-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Interface web para gerenciamento do Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: refactorscore-redis-commander
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  ollama_data:
  mongodb_data:
  redis_data: 